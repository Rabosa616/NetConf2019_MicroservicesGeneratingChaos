kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv0001
  namespace: generating-chaos
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: myclaim
  namespace: generating-chaos
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: generating-chaos
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    nodePort: 31017
  type: NodePort
  selector:
    role: mongo
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongostatefulset
  namespace: generating-chaos
spec:
  serviceName: "mongo-service"
  replicas: 3
  template:
    metadata:
      namespace: generating-chaos
      labels:
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongodb
          image: mongo
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip"
            - 0.0.0.0
          ports:
            - containerPort: 27017
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          livenessProbe:
            exec:
              command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: myclaim
              mountPath: /data/db
        - name: mongo-sidecar
          image: chaoscontainerregistry.azurecr.io/microservices.generatingchaos.mongo
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=test"
            - name: KUBERNETES_MONGO_SERVICE_NAME
              value: "mongo-service"      
      imagePullSecrets:
      - name: regcred
  volumeClaimTemplates:
  - metadata:
      name: myclaim
      namespace: generating-chaos
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
# ---
# apiVersion: networking.k8s.io/v1beta1 # for versions before 1.14 use extensions/v1beta1
# kind: Ingress
# metadata:
#   name: mongo-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#  rules:
#  - host: mongo.info
#    http:
#      paths:
#      - path: /*
#        backend:
#          serviceName: mongo-service
#          servicePort: 31017
